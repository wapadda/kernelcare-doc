(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{228:function(t,e,s){"use strict";s.r(e);var r=s(0),i=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("table",[t._m(2),t._v(" "),s("tbody",[t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("tr",[t._m(15),t._v(" "),s("td",[t._v("Stick patch to a particular date. More info at "),s("router-link",{attrs:{to:"/sticky_patches/"}},[t._v("Sticky Patches")]),t._v(" .")],1)]),t._v(" "),t._m(16),t._v(" "),t._m(17)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"config-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config-options","aria-hidden":"true"}},[this._v("#")]),this._v(" Config Options")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("kcarectl behavior can be configured using "),e("code",[this._v("/etc/sysconfig/kcare/kcare.conf")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th"),this._v(" "),e("th")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("AUTO_UPDATE=True|False")])]),this._v(" "),e("td",[e("code",[this._v("True")]),this._v(" - enable auto-update; "),e("code",[this._v("False")]),this._v(" - disable auto-update.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("chkconfig kcare off")])]),this._v(" "),e("td",[this._v("Disable auto-update after restart.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("tr",[s("td",[s("code",[t._v("PATCH_METHOD=normal|nofreeze|smart")])]),t._v(" "),s("td",[s("code",[t._v("Normal")]),t._v(" - (default) use freezer;"),s("br"),s("code",[t._v("Nofreeze")]),t._v(" - don't use freezer to freeze processes;"),s("br"),t._v(" "),s("code",[t._v("Smart")]),t._v(" - smart freezer freezes only threads that need to be frozen for patching [kernelcare 2.3+].")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("PATCH_SERVER")])]),this._v(" "),e("td",[this._v("Server to use to download patches.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("REGISTRATION_URL")])]),this._v(" "),e("td",[this._v("Licensing server.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("PREFIX=prefix")])]),this._v(" "),e("td",[this._v("Patch source prefix, used to test different builds, by downloading builds from a different location, based on prefix (v2.2+)")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("tr",[s("td",[s("code",[t._v("UPDATE_POLICY=REMOTE|LOCAL|LOCAL_FIRST [since 1.6]")])]),t._v(" "),s("td",[t._v("Depending on the policy, on server startup, use:"),s("br"),s("code",[t._v("REMOTE")]),t._v(" - (default) patches from patch server."),s("br"),s("code",[t._v("LOCAL")]),t._v(" - only locally cached patches, if none cached (caching is done automatically) - do nothing."),s("br"),s("code",[t._v("LOCAL_FIRST")]),t._v(" - see if locally cached patches exist, and load them. If not, try getting them from remote server.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("IGNORE_UNKNOWN_KERNEL=True|False")]),this._v(" "),e("code",[this._v("[since 2.5-4]")])]),this._v(" "),e("td",[this._v("Don't provide notification if unknown kernel on auto-update.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("LOAD_KCARE_SYSCTL [since 2.7-1]")])]),this._v(" "),e("td",[this._v("Controls if "),e("code",[this._v("/etc/sysconfig/kcare/sysctl.conf")]),this._v(" will be loaded on patchset load. True by default.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("--set-patch-type extra")])]),this._v(" "),e("td",[this._v("To enable extra patches.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("--set-patch-type free")])]),this._v(" "),e("td",[this._v("To enable free patches.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("STICKY_PATCH=KEY")])]),this._v(" "),e("td",[this._v("Retrieve sticky patch from "),e("code",[this._v("KEY")]),this._v(" (see CLN, Key Edit); not supported for IP based servers or ePortal.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("td",[e("code",[this._v("STICKY_PATCH=DDMMYY")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("REPORT_FQDN=True|False")])]),this._v(" "),e("td",[this._v("Force using Fully Qualified Domain as a hostname. False by default.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[e("code",[this._v("FORCE_GID=N")])]),this._v(" "),e("td",[this._v("Use this group ID for symlink protection patch. By default, it's 48 (default Apache user GID) or 99 ("),e("code",[this._v("nobody")]),this._v(" user)")])])}],!1,null,null,null);e.default=i.exports}}]);